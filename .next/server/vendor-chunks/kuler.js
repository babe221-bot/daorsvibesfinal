"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/kuler";
exports.ids = ["vendor-chunks/kuler"];
exports.modules = {

/***/ "(action-browser)/./node_modules/kuler/index.js":
/*!*************************************!*\
  !*** ./node_modules/kuler/index.js ***!
  \*************************************/
/***/ ((module) => {

eval("\n\n/**\n * Kuler: Color text using CSS colors\n *\n * @constructor\n * @param {String} text The text that needs to be styled\n * @param {String} color Optional color for alternate API.\n * @api public\n */\nfunction Kuler(text, color) {\n  if (color) return (new Kuler(text)).style(color);\n  if (!(this instanceof Kuler)) return new Kuler(text);\n\n  this.text = text;\n}\n\n/**\n * ANSI color codes.\n *\n * @type {String}\n * @private\n */\nKuler.prototype.prefix = '\\x1b[';\nKuler.prototype.suffix = 'm';\n\n/**\n * Parse a hex color string and parse it to it's RGB equiv.\n *\n * @param {String} color\n * @returns {Array}\n * @api private\n */\nKuler.prototype.hex = function hex(color) {\n  color = color[0] === '#' ? color.substring(1) : color;\n\n  //\n  // Pre-parse for shorthand hex colors.\n  //\n  if (color.length === 3) {\n    color = color.split('');\n\n    color[5] = color[2]; // F60##0\n    color[4] = color[2]; // F60#00\n    color[3] = color[1]; // F60600\n    color[2] = color[1]; // F66600\n    color[1] = color[0]; // FF6600\n\n    color = color.join('');\n  }\n\n  var r = color.substring(0, 2)\n    , g = color.substring(2, 4)\n    , b = color.substring(4, 6);\n\n  return [ parseInt(r, 16), parseInt(g, 16), parseInt(b, 16) ];\n};\n\n/**\n * Transform a 255 RGB value to an RGV code.\n *\n * @param {Number} r Red color channel.\n * @param {Number} g Green color channel.\n * @param {Number} b Blue color channel.\n * @returns {String}\n * @api public\n */\nKuler.prototype.rgb = function rgb(r, g, b) {\n  var red = r / 255 * 5\n    , green = g / 255 * 5\n    , blue = b / 255 * 5;\n\n  return this.ansi(red, green, blue);\n};\n\n/**\n * Turns RGB 0-5 values into a single ANSI code.\n *\n * @param {Number} r Red color channel.\n * @param {Number} g Green color channel.\n * @param {Number} b Blue color channel.\n * @returns {String}\n * @api public\n */\nKuler.prototype.ansi = function ansi(r, g, b) {\n  var red = Math.round(r)\n    , green = Math.round(g)\n    , blue = Math.round(b);\n\n  return 16 + (red * 36) + (green * 6) + blue;\n};\n\n/**\n * Marks an end of color sequence.\n *\n * @returns {String} Reset sequence.\n * @api public\n */\nKuler.prototype.reset = function reset() {\n  return this.prefix +'39;49'+ this.suffix;\n};\n\n/**\n * Colour the terminal using CSS.\n *\n * @param {String} color The HEX color code.\n * @returns {String} the escape code.\n * @api public\n */\nKuler.prototype.style = function style(color) {\n  return this.prefix +'38;5;'+ this.rgb.apply(this, this.hex(color)) + this.suffix + this.text + this.reset();\n};\n\n\n//\n// Expose the actual interface.\n//\nmodule.exports = Kuler;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9rdWxlci9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEseUJBQXlCO0FBQ3pCLHlCQUF5QjtBQUN6Qix5QkFBeUI7QUFDekIseUJBQXlCO0FBQ3pCLHlCQUF5Qjs7QUFFekI7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEI7QUFDMUI7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsV0FBVyxRQUFRO0FBQ25CLGFBQWEsUUFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsRUFBRTtBQUM1Qjs7O0FBR0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL25vZGVfbW9kdWxlcy9rdWxlci9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogS3VsZXI6IENvbG9yIHRleHQgdXNpbmcgQ1NTIGNvbG9yc1xuICpcbiAqIEBjb25zdHJ1Y3RvclxuICogQHBhcmFtIHtTdHJpbmd9IHRleHQgVGhlIHRleHQgdGhhdCBuZWVkcyB0byBiZSBzdHlsZWRcbiAqIEBwYXJhbSB7U3RyaW5nfSBjb2xvciBPcHRpb25hbCBjb2xvciBmb3IgYWx0ZXJuYXRlIEFQSS5cbiAqIEBhcGkgcHVibGljXG4gKi9cbmZ1bmN0aW9uIEt1bGVyKHRleHQsIGNvbG9yKSB7XG4gIGlmIChjb2xvcikgcmV0dXJuIChuZXcgS3VsZXIodGV4dCkpLnN0eWxlKGNvbG9yKTtcbiAgaWYgKCEodGhpcyBpbnN0YW5jZW9mIEt1bGVyKSkgcmV0dXJuIG5ldyBLdWxlcih0ZXh0KTtcblxuICB0aGlzLnRleHQgPSB0ZXh0O1xufVxuXG4vKipcbiAqIEFOU0kgY29sb3IgY29kZXMuXG4gKlxuICogQHR5cGUge1N0cmluZ31cbiAqIEBwcml2YXRlXG4gKi9cbkt1bGVyLnByb3RvdHlwZS5wcmVmaXggPSAnXFx4MWJbJztcbkt1bGVyLnByb3RvdHlwZS5zdWZmaXggPSAnbSc7XG5cbi8qKlxuICogUGFyc2UgYSBoZXggY29sb3Igc3RyaW5nIGFuZCBwYXJzZSBpdCB0byBpdCdzIFJHQiBlcXVpdi5cbiAqXG4gKiBAcGFyYW0ge1N0cmluZ30gY29sb3JcbiAqIEByZXR1cm5zIHtBcnJheX1cbiAqIEBhcGkgcHJpdmF0ZVxuICovXG5LdWxlci5wcm90b3R5cGUuaGV4ID0gZnVuY3Rpb24gaGV4KGNvbG9yKSB7XG4gIGNvbG9yID0gY29sb3JbMF0gPT09ICcjJyA/IGNvbG9yLnN1YnN0cmluZygxKSA6IGNvbG9yO1xuXG4gIC8vXG4gIC8vIFByZS1wYXJzZSBmb3Igc2hvcnRoYW5kIGhleCBjb2xvcnMuXG4gIC8vXG4gIGlmIChjb2xvci5sZW5ndGggPT09IDMpIHtcbiAgICBjb2xvciA9IGNvbG9yLnNwbGl0KCcnKTtcblxuICAgIGNvbG9yWzVdID0gY29sb3JbMl07IC8vIEY2MCMjMFxuICAgIGNvbG9yWzRdID0gY29sb3JbMl07IC8vIEY2MCMwMFxuICAgIGNvbG9yWzNdID0gY29sb3JbMV07IC8vIEY2MDYwMFxuICAgIGNvbG9yWzJdID0gY29sb3JbMV07IC8vIEY2NjYwMFxuICAgIGNvbG9yWzFdID0gY29sb3JbMF07IC8vIEZGNjYwMFxuXG4gICAgY29sb3IgPSBjb2xvci5qb2luKCcnKTtcbiAgfVxuXG4gIHZhciByID0gY29sb3Iuc3Vic3RyaW5nKDAsIDIpXG4gICAgLCBnID0gY29sb3Iuc3Vic3RyaW5nKDIsIDQpXG4gICAgLCBiID0gY29sb3Iuc3Vic3RyaW5nKDQsIDYpO1xuXG4gIHJldHVybiBbIHBhcnNlSW50KHIsIDE2KSwgcGFyc2VJbnQoZywgMTYpLCBwYXJzZUludChiLCAxNikgXTtcbn07XG5cbi8qKlxuICogVHJhbnNmb3JtIGEgMjU1IFJHQiB2YWx1ZSB0byBhbiBSR1YgY29kZS5cbiAqXG4gKiBAcGFyYW0ge051bWJlcn0gciBSZWQgY29sb3IgY2hhbm5lbC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBnIEdyZWVuIGNvbG9yIGNoYW5uZWwuXG4gKiBAcGFyYW0ge051bWJlcn0gYiBCbHVlIGNvbG9yIGNoYW5uZWwuXG4gKiBAcmV0dXJucyB7U3RyaW5nfVxuICogQGFwaSBwdWJsaWNcbiAqL1xuS3VsZXIucHJvdG90eXBlLnJnYiA9IGZ1bmN0aW9uIHJnYihyLCBnLCBiKSB7XG4gIHZhciByZWQgPSByIC8gMjU1ICogNVxuICAgICwgZ3JlZW4gPSBnIC8gMjU1ICogNVxuICAgICwgYmx1ZSA9IGIgLyAyNTUgKiA1O1xuXG4gIHJldHVybiB0aGlzLmFuc2kocmVkLCBncmVlbiwgYmx1ZSk7XG59O1xuXG4vKipcbiAqIFR1cm5zIFJHQiAwLTUgdmFsdWVzIGludG8gYSBzaW5nbGUgQU5TSSBjb2RlLlxuICpcbiAqIEBwYXJhbSB7TnVtYmVyfSByIFJlZCBjb2xvciBjaGFubmVsLlxuICogQHBhcmFtIHtOdW1iZXJ9IGcgR3JlZW4gY29sb3IgY2hhbm5lbC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBiIEJsdWUgY29sb3IgY2hhbm5lbC5cbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKiBAYXBpIHB1YmxpY1xuICovXG5LdWxlci5wcm90b3R5cGUuYW5zaSA9IGZ1bmN0aW9uIGFuc2kociwgZywgYikge1xuICB2YXIgcmVkID0gTWF0aC5yb3VuZChyKVxuICAgICwgZ3JlZW4gPSBNYXRoLnJvdW5kKGcpXG4gICAgLCBibHVlID0gTWF0aC5yb3VuZChiKTtcblxuICByZXR1cm4gMTYgKyAocmVkICogMzYpICsgKGdyZWVuICogNikgKyBibHVlO1xufTtcblxuLyoqXG4gKiBNYXJrcyBhbiBlbmQgb2YgY29sb3Igc2VxdWVuY2UuXG4gKlxuICogQHJldHVybnMge1N0cmluZ30gUmVzZXQgc2VxdWVuY2UuXG4gKiBAYXBpIHB1YmxpY1xuICovXG5LdWxlci5wcm90b3R5cGUucmVzZXQgPSBmdW5jdGlvbiByZXNldCgpIHtcbiAgcmV0dXJuIHRoaXMucHJlZml4ICsnMzk7NDknKyB0aGlzLnN1ZmZpeDtcbn07XG5cbi8qKlxuICogQ29sb3VyIHRoZSB0ZXJtaW5hbCB1c2luZyBDU1MuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGNvbG9yIFRoZSBIRVggY29sb3IgY29kZS5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IHRoZSBlc2NhcGUgY29kZS5cbiAqIEBhcGkgcHVibGljXG4gKi9cbkt1bGVyLnByb3RvdHlwZS5zdHlsZSA9IGZ1bmN0aW9uIHN0eWxlKGNvbG9yKSB7XG4gIHJldHVybiB0aGlzLnByZWZpeCArJzM4OzU7JysgdGhpcy5yZ2IuYXBwbHkodGhpcywgdGhpcy5oZXgoY29sb3IpKSArIHRoaXMuc3VmZml4ICsgdGhpcy50ZXh0ICsgdGhpcy5yZXNldCgpO1xufTtcblxuXG4vL1xuLy8gRXhwb3NlIHRoZSBhY3R1YWwgaW50ZXJmYWNlLlxuLy9cbm1vZHVsZS5leHBvcnRzID0gS3VsZXI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/kuler/index.js\n");

/***/ })

};
;