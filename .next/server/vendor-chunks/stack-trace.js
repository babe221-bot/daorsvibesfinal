/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/stack-trace";
exports.ids = ["vendor-chunks/stack-trace"];
exports.modules = {

/***/ "(action-browser)/./node_modules/stack-trace/lib/stack-trace.js":
/*!*****************************************************!*\
  !*** ./node_modules/stack-trace/lib/stack-trace.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("exports.get = function(belowFn) {\n  var oldLimit = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n\n  var dummyObject = {};\n\n  var v8Handler = Error.prepareStackTrace;\n  Error.prepareStackTrace = function(dummyObject, v8StackTrace) {\n    return v8StackTrace;\n  };\n  Error.captureStackTrace(dummyObject, belowFn || exports.get);\n\n  var v8StackTrace = dummyObject.stack;\n  Error.prepareStackTrace = v8Handler;\n  Error.stackTraceLimit = oldLimit;\n\n  return v8StackTrace;\n};\n\nexports.parse = function(err) {\n  if (!err.stack) {\n    return [];\n  }\n\n  var self = this;\n  var lines = err.stack.split('\\n').slice(1);\n\n  return lines\n    .map(function(line) {\n      if (line.match(/^\\s*[-]{4,}$/)) {\n        return self._createParsedCallSite({\n          fileName: line,\n          lineNumber: null,\n          functionName: null,\n          typeName: null,\n          methodName: null,\n          columnNumber: null,\n          'native': null,\n        });\n      }\n\n      var lineMatch = line.match(/at (?:(.+)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?|([^)]+))\\)?/);\n      if (!lineMatch) {\n        return;\n      }\n\n      var object = null;\n      var method = null;\n      var functionName = null;\n      var typeName = null;\n      var methodName = null;\n      var isNative = (lineMatch[5] === 'native');\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1];\n        var methodStart = functionName.lastIndexOf('.');\n        if (functionName[methodStart-1] == '.')\n          methodStart--;\n        if (methodStart > 0) {\n          object = functionName.substr(0, methodStart);\n          method = functionName.substr(methodStart + 1);\n          var objectEnd = object.indexOf('.Module');\n          if (objectEnd > 0) {\n            functionName = functionName.substr(objectEnd + 1);\n            object = object.substr(0, objectEnd);\n          }\n        }\n        typeName = null;\n      }\n\n      if (method) {\n        typeName = object;\n        methodName = method;\n      }\n\n      if (method === '<anonymous>') {\n        methodName = null;\n        functionName = null;\n      }\n\n      var properties = {\n        fileName: lineMatch[2] || null,\n        lineNumber: parseInt(lineMatch[3], 10) || null,\n        functionName: functionName,\n        typeName: typeName,\n        methodName: methodName,\n        columnNumber: parseInt(lineMatch[4], 10) || null,\n        'native': isNative,\n      };\n\n      return self._createParsedCallSite(properties);\n    })\n    .filter(function(callSite) {\n      return !!callSite;\n    });\n};\n\nfunction CallSite(properties) {\n  for (var property in properties) {\n    this[property] = properties[property];\n  }\n}\n\nvar strProperties = [\n  'this',\n  'typeName',\n  'functionName',\n  'methodName',\n  'fileName',\n  'lineNumber',\n  'columnNumber',\n  'function',\n  'evalOrigin'\n];\nvar boolProperties = [\n  'topLevel',\n  'eval',\n  'native',\n  'constructor'\n];\nstrProperties.forEach(function (property) {\n  CallSite.prototype[property] = null;\n  CallSite.prototype['get' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\nboolProperties.forEach(function (property) {\n  CallSite.prototype[property] = false;\n  CallSite.prototype['is' + property[0].toUpperCase() + property.substr(1)] = function () {\n    return this[property];\n  }\n});\n\nexports._createParsedCallSite = function(properties) {\n  return new CallSite(properties);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFjdGlvbi1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9zdGFjay10cmFjZS9saWIvc3RhY2stdHJhY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsV0FBVztBQUNYO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQSxhQUFhO0FBQ2I7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLDhCQUE4QixHQUFHO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsS0FBSztBQUNMOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsNkJBQTZCO0FBQzdCO0FBQ0EiLCJzb3VyY2VzIjpbIi9ob21lL3VzZXIvc3R1ZGlvL25vZGVfbW9kdWxlcy9zdGFjay10cmFjZS9saWIvc3RhY2stdHJhY2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cy5nZXQgPSBmdW5jdGlvbihiZWxvd0ZuKSB7XG4gIHZhciBvbGRMaW1pdCA9IEVycm9yLnN0YWNrVHJhY2VMaW1pdDtcbiAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gSW5maW5pdHk7XG5cbiAgdmFyIGR1bW15T2JqZWN0ID0ge307XG5cbiAgdmFyIHY4SGFuZGxlciA9IEVycm9yLnByZXBhcmVTdGFja1RyYWNlO1xuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IGZ1bmN0aW9uKGR1bW15T2JqZWN0LCB2OFN0YWNrVHJhY2UpIHtcbiAgICByZXR1cm4gdjhTdGFja1RyYWNlO1xuICB9O1xuICBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShkdW1teU9iamVjdCwgYmVsb3dGbiB8fCBleHBvcnRzLmdldCk7XG5cbiAgdmFyIHY4U3RhY2tUcmFjZSA9IGR1bW15T2JqZWN0LnN0YWNrO1xuICBFcnJvci5wcmVwYXJlU3RhY2tUcmFjZSA9IHY4SGFuZGxlcjtcbiAgRXJyb3Iuc3RhY2tUcmFjZUxpbWl0ID0gb2xkTGltaXQ7XG5cbiAgcmV0dXJuIHY4U3RhY2tUcmFjZTtcbn07XG5cbmV4cG9ydHMucGFyc2UgPSBmdW5jdGlvbihlcnIpIHtcbiAgaWYgKCFlcnIuc3RhY2spIHtcbiAgICByZXR1cm4gW107XG4gIH1cblxuICB2YXIgc2VsZiA9IHRoaXM7XG4gIHZhciBsaW5lcyA9IGVyci5zdGFjay5zcGxpdCgnXFxuJykuc2xpY2UoMSk7XG5cbiAgcmV0dXJuIGxpbmVzXG4gICAgLm1hcChmdW5jdGlvbihsaW5lKSB7XG4gICAgICBpZiAobGluZS5tYXRjaCgvXlxccypbLV17NCx9JC8pKSB7XG4gICAgICAgIHJldHVybiBzZWxmLl9jcmVhdGVQYXJzZWRDYWxsU2l0ZSh7XG4gICAgICAgICAgZmlsZU5hbWU6IGxpbmUsXG4gICAgICAgICAgbGluZU51bWJlcjogbnVsbCxcbiAgICAgICAgICBmdW5jdGlvbk5hbWU6IG51bGwsXG4gICAgICAgICAgdHlwZU5hbWU6IG51bGwsXG4gICAgICAgICAgbWV0aG9kTmFtZTogbnVsbCxcbiAgICAgICAgICBjb2x1bW5OdW1iZXI6IG51bGwsXG4gICAgICAgICAgJ25hdGl2ZSc6IG51bGwsXG4gICAgICAgIH0pO1xuICAgICAgfVxuXG4gICAgICB2YXIgbGluZU1hdGNoID0gbGluZS5tYXRjaCgvYXQgKD86KC4rKVxccytcXCgpPyg/OiguKz8pOihcXGQrKSg/OjooXFxkKykpP3woW14pXSspKVxcKT8vKTtcbiAgICAgIGlmICghbGluZU1hdGNoKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgdmFyIG9iamVjdCA9IG51bGw7XG4gICAgICB2YXIgbWV0aG9kID0gbnVsbDtcbiAgICAgIHZhciBmdW5jdGlvbk5hbWUgPSBudWxsO1xuICAgICAgdmFyIHR5cGVOYW1lID0gbnVsbDtcbiAgICAgIHZhciBtZXRob2ROYW1lID0gbnVsbDtcbiAgICAgIHZhciBpc05hdGl2ZSA9IChsaW5lTWF0Y2hbNV0gPT09ICduYXRpdmUnKTtcblxuICAgICAgaWYgKGxpbmVNYXRjaFsxXSkge1xuICAgICAgICBmdW5jdGlvbk5hbWUgPSBsaW5lTWF0Y2hbMV07XG4gICAgICAgIHZhciBtZXRob2RTdGFydCA9IGZ1bmN0aW9uTmFtZS5sYXN0SW5kZXhPZignLicpO1xuICAgICAgICBpZiAoZnVuY3Rpb25OYW1lW21ldGhvZFN0YXJ0LTFdID09ICcuJylcbiAgICAgICAgICBtZXRob2RTdGFydC0tO1xuICAgICAgICBpZiAobWV0aG9kU3RhcnQgPiAwKSB7XG4gICAgICAgICAgb2JqZWN0ID0gZnVuY3Rpb25OYW1lLnN1YnN0cigwLCBtZXRob2RTdGFydCk7XG4gICAgICAgICAgbWV0aG9kID0gZnVuY3Rpb25OYW1lLnN1YnN0cihtZXRob2RTdGFydCArIDEpO1xuICAgICAgICAgIHZhciBvYmplY3RFbmQgPSBvYmplY3QuaW5kZXhPZignLk1vZHVsZScpO1xuICAgICAgICAgIGlmIChvYmplY3RFbmQgPiAwKSB7XG4gICAgICAgICAgICBmdW5jdGlvbk5hbWUgPSBmdW5jdGlvbk5hbWUuc3Vic3RyKG9iamVjdEVuZCArIDEpO1xuICAgICAgICAgICAgb2JqZWN0ID0gb2JqZWN0LnN1YnN0cigwLCBvYmplY3RFbmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0eXBlTmFtZSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QpIHtcbiAgICAgICAgdHlwZU5hbWUgPSBvYmplY3Q7XG4gICAgICAgIG1ldGhvZE5hbWUgPSBtZXRob2Q7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZXRob2QgPT09ICc8YW5vbnltb3VzPicpIHtcbiAgICAgICAgbWV0aG9kTmFtZSA9IG51bGw7XG4gICAgICAgIGZ1bmN0aW9uTmFtZSA9IG51bGw7XG4gICAgICB9XG5cbiAgICAgIHZhciBwcm9wZXJ0aWVzID0ge1xuICAgICAgICBmaWxlTmFtZTogbGluZU1hdGNoWzJdIHx8IG51bGwsXG4gICAgICAgIGxpbmVOdW1iZXI6IHBhcnNlSW50KGxpbmVNYXRjaFszXSwgMTApIHx8IG51bGwsXG4gICAgICAgIGZ1bmN0aW9uTmFtZTogZnVuY3Rpb25OYW1lLFxuICAgICAgICB0eXBlTmFtZTogdHlwZU5hbWUsXG4gICAgICAgIG1ldGhvZE5hbWU6IG1ldGhvZE5hbWUsXG4gICAgICAgIGNvbHVtbk51bWJlcjogcGFyc2VJbnQobGluZU1hdGNoWzRdLCAxMCkgfHwgbnVsbCxcbiAgICAgICAgJ25hdGl2ZSc6IGlzTmF0aXZlLFxuICAgICAgfTtcblxuICAgICAgcmV0dXJuIHNlbGYuX2NyZWF0ZVBhcnNlZENhbGxTaXRlKHByb3BlcnRpZXMpO1xuICAgIH0pXG4gICAgLmZpbHRlcihmdW5jdGlvbihjYWxsU2l0ZSkge1xuICAgICAgcmV0dXJuICEhY2FsbFNpdGU7XG4gICAgfSk7XG59O1xuXG5mdW5jdGlvbiBDYWxsU2l0ZShwcm9wZXJ0aWVzKSB7XG4gIGZvciAodmFyIHByb3BlcnR5IGluIHByb3BlcnRpZXMpIHtcbiAgICB0aGlzW3Byb3BlcnR5XSA9IHByb3BlcnRpZXNbcHJvcGVydHldO1xuICB9XG59XG5cbnZhciBzdHJQcm9wZXJ0aWVzID0gW1xuICAndGhpcycsXG4gICd0eXBlTmFtZScsXG4gICdmdW5jdGlvbk5hbWUnLFxuICAnbWV0aG9kTmFtZScsXG4gICdmaWxlTmFtZScsXG4gICdsaW5lTnVtYmVyJyxcbiAgJ2NvbHVtbk51bWJlcicsXG4gICdmdW5jdGlvbicsXG4gICdldmFsT3JpZ2luJ1xuXTtcbnZhciBib29sUHJvcGVydGllcyA9IFtcbiAgJ3RvcExldmVsJyxcbiAgJ2V2YWwnLFxuICAnbmF0aXZlJyxcbiAgJ2NvbnN0cnVjdG9yJ1xuXTtcbnN0clByb3BlcnRpZXMuZm9yRWFjaChmdW5jdGlvbiAocHJvcGVydHkpIHtcbiAgQ2FsbFNpdGUucHJvdG90eXBlW3Byb3BlcnR5XSA9IG51bGw7XG4gIENhbGxTaXRlLnByb3RvdHlwZVsnZ2V0JyArIHByb3BlcnR5WzBdLnRvVXBwZXJDYXNlKCkgKyBwcm9wZXJ0eS5zdWJzdHIoMSldID0gZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiB0aGlzW3Byb3BlcnR5XTtcbiAgfVxufSk7XG5ib29sUHJvcGVydGllcy5mb3JFYWNoKGZ1bmN0aW9uIChwcm9wZXJ0eSkge1xuICBDYWxsU2l0ZS5wcm90b3R5cGVbcHJvcGVydHldID0gZmFsc2U7XG4gIENhbGxTaXRlLnByb3RvdHlwZVsnaXMnICsgcHJvcGVydHlbMF0udG9VcHBlckNhc2UoKSArIHByb3BlcnR5LnN1YnN0cigxKV0gPSBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXNbcHJvcGVydHldO1xuICB9XG59KTtcblxuZXhwb3J0cy5fY3JlYXRlUGFyc2VkQ2FsbFNpdGUgPSBmdW5jdGlvbihwcm9wZXJ0aWVzKSB7XG4gIHJldHVybiBuZXcgQ2FsbFNpdGUocHJvcGVydGllcyk7XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(action-browser)/./node_modules/stack-trace/lib/stack-trace.js\n");

/***/ })

};
;